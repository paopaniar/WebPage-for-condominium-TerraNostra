@model Infraestructure.Models.usuario

@{
    ViewBag.Title = "Nuevos Usuarios";
    int nombre = 0;
    Infraestructure.Models.usuario usuario = new Infraestructure.Models.usuario();
    usuario = (Infraestructure.Models.usuario)Session["User"];
    nombre = usuario.identificacion;
}



@using (Html.BeginForm("Save", "usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<br />
<div class="form-horizontal">
    <center>
        <h4 style="font-family:Broadway">Nuevos Usuarios</h4>
        <hr />
        <div class="card text-white bg-dark border-primary mb-3" style="max-width: 40rem;">
            <br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.rolId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.rolId,
                        (SelectList)ViewBag.rol,
                        "Seleccione un rol",
                        htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.identificacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.identificacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.identificacion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.apellido2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.apellido2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.estado,
                        (SelectList)ViewBag.estado,
                        "Seleccione un estado",
                        htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <button type="submit" class="btn btn-outline-primary btn-sm">Guardar</button>
                </div>
            </div>
            <br />
        </div>
    </center>
    </div>
    }
 
    <p>

        @Html.ActionLink("Regresar al listado", "Index", null, new { @class = "btn btn-primary" })
    </p>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
