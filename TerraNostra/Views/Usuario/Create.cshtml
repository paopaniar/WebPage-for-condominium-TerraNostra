@model Infraestructure.Models.usuario

@{
    ViewBag.Title = "Nuevos Usuarios";
    int nombre = 0;
    Infraestructure.Models.usuario usuario = new Infraestructure.Models.usuario();
    usuario = (Infraestructure.Models.usuario)Session["User"];
    nombre = usuario.identificacion;
}



@using (Html.BeginForm("Save", "usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <br />
    <div class="container">
        <div class="row justify-content-center mt-5">
            <div class="col-md-10">
                <div class="card bg-dark">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">Nuevos usuarios</h4>
                    </div>
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group row">
                            @Html.LabelFor(model => model.rolId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.rolId,
                                    (SelectList)ViewBag.rol,
                                    "Seleccione un rol",
                                    htmlAttributes: new { @class = "form-control editor-outline" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.identificacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.identificacion, new { htmlAttributes = new { @class = "form-control editor-outline" } })
                                @Html.ValidationMessageFor(model => model.identificacion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control editor-outline" } })
                                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control editor-outline" } })
                                @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.apellido2, new { htmlAttributes = new { @class = "form-control editor-outline" } })
                                @Html.ValidationMessageFor(model => model.apellido2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control editor-outline" } })
                                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.estado,
                                    (SelectList)ViewBag.estado,
                                    "Seleccione un estado",
                                    htmlAttributes: new { @class = "form-control editor-outline" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control editor-outline" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control editor-outline" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="form-group row mb-0">
                            <div class="col-md-6 offset-md-3">
                                <button type="submit" class="btn btn-primary">Guardar</button>
                                @Html.ActionLink("Regresar al listado", "Index", null, new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@if (ViewBag.NotificationMessage != null)
{
    <script>
        swal('@ViewBag.NotificationMessage.Title', '@ViewBag.NotificationMessage.Message', '@ViewBag.NotificationMessage.Type');
    </script>
}

<style>
    .editor-outline {
        outline: 2px solid #0094ff; /* change to your desired color */
    }
</style>