@model Infraestructure.Models.residencia

@{
    ViewBag.Title = "Edit";
}




@using (Html.BeginForm("Save", "residencia", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    <br />
    <h4 style="font-family: Broadway">Editar residencia</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.usuario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.usuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.usuario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.individualsNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.individualsNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.individualsNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.annio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.annio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.annio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.estado,
               (SelectList)ViewBag.estado,
               "Seleccione un estado",
               htmlAttributes: new { @class = "form-control", @id = "estado" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.otherInfoDetails, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.otherInfoDetails, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.otherInfoDetails, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.numeroCasa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.numeroCasa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.numeroCasa, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-outline-primary btn-sm">Modificar</button>
        </div>
    </div>
</div>


    <hr />
    <p>

        @Html.ActionLink("Regresar al listado", "Index", null, new { @class = "btn btn-outline-primary" })
    </p>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
